{
  "name": "node-icons",
  "version": "1.0.1",
  "license": "MIT",
  "author": "JSGandalf",
  "homepage": "https://github.com/Borrus-sudo/node-icons",
  "main": "out/index.js",
  "module": "out/index.mjs",
  "types": "out/index.d.ts",
  "files": [
    "out"
  ],
  "exports": {
    ".": {
      "require": "./out/index.js",
      "import": "./out/index.mjs",
      "types": "./out/index.d.ts"
    }
  },
  "lint-staged": {
    "*.{ts,js,json}": [
      "prettier --write"
    ]
  },
  "devDependencies": {
    "@commitlint/cli": "^15.0.0",
    "@commitlint/config-conventional": "^15.0.0",
    "@iconify/json": "^1.1.448",
    "@types/jest": "^27.0.3",
    "@types/node": "^16.11.12",
    "husky": "^7.0.0",
    "jest": "^27.4.3",
    "lint-staged": "^12.1.2",
    "prettier": "^2.5.1",
    "ts-jest": "^27.1.1",
    "tsup": "^5.10.3",
    "typescript": "^4.5.3"
  },
  "dependencies": {
    "@antfu/install-pkg": "^0.1.0",
    "defu": "^6.0.0"
  },
  "scripts": {
    "test": "jest",
    "build": "tsup",
    "dev": "tsup --watch lib",
    "start": "tsup&&node out"
  },
  "readme": "<!-- DO NOT REMOVE - contributor_list:data:start:[\"Borrus-sudo\"]:end -->\r\n\r\n# üç± node-icons\r\n\r\n[![All Contributors](https://img.shields.io/github/contributors/Borrus-sudo/node-icons?color=orange)](#contributors-)\r\n![License](https://img.shields.io/github/license/Borrus-sudo/node-icons?label=License)\r\n![Last Commit](https://img.shields.io/github/last-commit/Borrus-sudo/node-icons?label=Last%20Commit)\r\n![Stars](https://img.shields.io/github/stars/Borrus-sudo/node-icons)\r\n![Forks](https://img.shields.io/github/forks/Borrus-sudo/node-icons)\r\n\r\n## Usage\r\n\r\nCheckout its [unit tests](./test/index.test.ts) to see complete usage with output!\r\n\r\n```ts\r\nimport Icons from \"node-icons\";\r\nconst icons = Icons({\r\n  // auto installs the collection set of an icon if not already installed\r\n  installPkg: true,\r\n  alias: new Map(),\r\n  prefix: \"lucide\",\r\n  separator: \":\",\r\n});\r\nconst result = await icons.iconify(\"This is cool right! ::activity::\", {\r\n  // The `styles` object's key value pair are appended as attributes to the svg\r\n  styles: {\r\n    width: 100,\r\n    color: `\"red\"`, // it is important to have quotes for those values which need them like color=\"red\"\r\n  },\r\n  base64: false,\r\n});\r\n```\r\n\r\nThe `Icon({})` function expects an object of type [config](./lib/types.ts).\r\nThe object returned by it has 2 methods\r\n\r\n```ts\r\ntype returnVal = {\r\n  getIcons(iconName: any, styles: any, base64: boolean): Promise<string>;\r\n  getIconsSync(iconName: any, styles: any, base64: boolean): string;\r\n  iconify(\r\n    text: string,\r\n    options: {\r\n      styles: object;\r\n      base64: boolean;\r\n    },\r\n    regex?: RegExp,\r\n  ): Promise<string>;\r\n};\r\n```\r\n_With `getIconsSync`, auto installing icons is not possible._\r\n\r\n## Installation\r\n\r\n`npm i node-icons` or `yarn add node-icons` to install.\r\n\r\n`npm i @iconify/json` to install all icons or `npm i @iconify-json/<collection-id>` to install a specific icon set.\r\n\r\n## üéâ Contributing\r\n\r\nContributions are welcome! Whether it is a small documentation change or a breaking feature, we welcome it!\r\n\r\n_Please note: All contributions are taken under the MIT license_\r\n\r\n<!-- prettier-ignore-start -->\r\n<!-- DO NOT REMOVE - contributor_list:start -->\r\n## üë• Contributors\r\n\r\n\r\n- **[@Borrus-sudo](https://github.com/Borrus-sudo)**\r\n\r\n<!-- DO NOT REMOVE - contributor_list:end -->\r\n<!-- prettier-ignore-end -->\r\n"
}